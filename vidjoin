#!/usr/bin/env node
const fs = require('fs');
const util = require('util');
const exec = util.promisify(require('child_process').exec);

let config = {
  "inputDir": ".",
  "outputDir": "./final",
  "ext": "mov"
};

/*
let configFile = fs.readFileSync(`${__dirname}/config.json`);
let configJSON = JSON.parse(configFile);
config = {...config, ...configJSON };
*/

if (!fs.existsSync(config.outputDir)){
  fs.mkdirSync(config.outputDir);
}

let args = process.argv.slice(2);

async function processAll() {
  let tmpName = `${__dirname}/tmp.txt`;

  for(let vid of args) {
    let parts = vid.split(':');

    let temp = '';
    for (let part of parts) {
      temp += `file '${config.inputDir}/${part}.${config.ext}'\n`
    }
    fs.writeFileSync(tmpName, temp);

    let outName = `${config.outputDir}/${parts.join('_')}.${config.ext}`;

    console.log(`Processing ${outName}...`);

    await exec(`ffmpeg -y -f concat -safe 0 -i tmp.txt -c copy ${outName}`);
  }
}

processAll();
