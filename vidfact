#!/usr/bin/env node
const fs = require('fs');
const util = require('util');
const exec = util.promisify(require('child_process').exec);

let config = {
  "introDir": "./intros",
  "contentDir": "./content",
  "outputDir": "./out"
};

let configFile = fs.readFileSync(`${__dirname}/config.json`);
let configJSON = JSON.parse(configFile);
config = {...config, ...configJSON };

let args = process.argv.slice(2);
console.log(args);

async function processAll() {
  let tmpName = `${__dirname}/tmp.txt`;

  for(let vid of args) {
    let parts = vid.split(':');
    let intro = `${config.introDir}/${parts[0]}.mov`;
    let content = `${config.contentDir}/content_${parts[1]}.mov`;
    let outName = `${config.outputDir}/${parts[0]}_${parts[1]}.mov`;

    console.log(`Processing intro ${intro} with ${content}...`);

    let temp = `file '${intro}'\nfile '${content}'`;
    fs.writeFileSync(tmpName, temp);

    await exec(`ffmpeg -y -f concat -safe 0 -i tmp.txt -c copy ${outName}`)
  }

  fs.unlinkSync(tmpName);
}

processAll();